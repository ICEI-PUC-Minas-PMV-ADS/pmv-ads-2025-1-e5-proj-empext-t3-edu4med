// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Edu4MedBackEnd.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506194632_Fix")]
    partial class Fix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Edu4MedBackEnd.Models.Edital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Editais");
                });

            modelBuilder.Entity("Edu4MedBackEnd.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Edu4MedBackEnd.Models.UsuarioVestibular", b =>
                {
                    b.Property<int>("usuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("vestibularId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioVestibularusuarioId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioVestibularvestibularId")
                        .HasColumnType("integer");

                    b.HasKey("usuarioId", "vestibularId");

                    b.HasIndex("vestibularId");

                    b.HasIndex("UsuarioVestibularusuarioId", "UsuarioVestibularvestibularId");

                    b.ToTable("UsuariosVestibulares");
                });

            modelBuilder.Entity("Edu4MedBackEnd.Models.Vestibular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Data_prova")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Fim_cadastro")
                        .HasColumnType("text");

                    b.Property<string>("Instituicao")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<DateTime>("Link_inscricoes")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Regiao")
                        .HasColumnType("text");

                    b.Property<string>("Universidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Vagas")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vestibulares");
                });

            modelBuilder.Entity("Edu4MedBackEnd.Models.UsuarioVestibular", b =>
                {
                    b.HasOne("Edu4MedBackEnd.Models.Usuario", "Usuario")
                        .WithMany("UsuariosVestibulares")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Edu4MedBackEnd.Models.Vestibular", "Vestibular")
                        .WithMany("UsuariosVestibulares")
                        .HasForeignKey("vestibularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Edu4MedBackEnd.Models.UsuarioVestibular", null)
                        .WithMany("UsuariosVestibulares")
                        .HasForeignKey("UsuarioVestibularusuarioId", "UsuarioVestibularvestibularId");

                    b.Navigation("Usuario");

                    b.Navigation("Vestibular");
                });

            modelBuilder.Entity("Edu4MedBackEnd.Models.Usuario", b =>
                {
                    b.Navigation("UsuariosVestibulares");
                });

            modelBuilder.Entity("Edu4MedBackEnd.Models.UsuarioVestibular", b =>
                {
                    b.Navigation("UsuariosVestibulares");
                });

            modelBuilder.Entity("Edu4MedBackEnd.Models.Vestibular", b =>
                {
                    b.Navigation("UsuariosVestibulares");
                });
#pragma warning restore 612, 618
        }
    }
}
